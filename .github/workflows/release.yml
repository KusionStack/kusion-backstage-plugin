name: Release Plugins

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  changesets-pr:
    name: Update Version Packages PR
    runs-on: ubuntu-latest
    outputs:
      needs_release: ${{ steps.release_check.outputs.needs_release }}
    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4

      - name: Set up Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v4 # v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - name: cache global yarn cache
        uses: actions/cache@v4 # v4
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Fetch previous commit for check
        run: git fetch origin '${{ github.event.before }}'

      - name: Check if release
        id: release_check
        run: |
          yarn install
          node scripts/ci/check-if-release.js
        working-directory: ./
        env:
          COMMIT_SHA_BEFORE: '${{ github.event.before }}'

      - name: Update Version Packages PR
        uses: backstage/changesets-action@291bfc1f76d1dcfbf967f5810dc0423592eae09a # v2.3.1
        with:
          title: Version Packages
          version: yarn release
          skipRootChangelogUpdate: true
        env:
          GITHUB_TOKEN: ${{ secrets.KUSIONSTACK_BOT_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: changesets-pr
    if: needs.changesets-pr.outputs.needs_release == 'true'
    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4

      - name: Set up Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/ # Needed for auth
      
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v4 # v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - name: cache global yarn cache
        uses: actions/cache@v4 # v4
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install root dependencies
        run: yarn install --immutable
      
      - name: Compile TypeScript
        run: yarn tsc

      - name: Build all packages
        run: yarn build:all
      
      - name: publish
        run: |
          yarn config set -H 'npmAuthToken' "${{secrets.NPM_TOKEN}}"
          yarn workspaces foreach -W -v --no-private npm publish --access public --tolerate-republish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create tag
        working-directory: ${{ github.workspace }}/scripts/ci
        run: node create-tag.js
        env:
          GITHUB_TOKEN: ${{ secrets.KUSIONSTACK_BOT_TOKEN }}
